security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        Symfony\Component\Security\Core\User\User: bcrypt
    providers:
        users_in_memory:
            memory:
                users:
                    admin:
                        password : $2y$13$KwWsuCktYVp3vKWQ9kn67eXlvWwfSnf49M4V2lWqBqt0qlbzy/V5W
                        roles: ['ROLE_USER','ROLE_ADMIN']

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            lazy: true
            provider: users_in_memory
            form_login:
                login_path: account_login
                check_path: account_login
                always_use_default_target_path: true
                default_target_path: admin
            logout:
                path: account_logout
                target: account_login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
